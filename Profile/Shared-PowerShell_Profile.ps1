# Common profile script to be called by the default Microsoft.PowerShell_profile.ps1
# Copyright DM Tech 2020
#
# Prerequisites:
#   A system or user environment variable $Env:DevPath with the path to your scripts directory
#   A system or user environment variable $Env:AdminUPN for the relevant domain/cloud service account

# Set the start location to the DevPath
Set-Location -Path "$Env:DevPath"

# Add the Modules folder in the $Env:DevPath to the PSModulePath for easy access to custom modules 
$Env:PSModulePath += (';' + "$Env:DevPath" + '\Modules')

#### Fancy stored credentials bit ####

# Set the $KeyPath variable to somewhere sensible as required by Functions-PSStoredCredentials.ps1 (per user)
$KeyPath = "$Home\Documents\PowerShell"

<#
    This checks if the $Env:AdminUPN environment variable exists for specifying an admin username for authentication
    If so, dot-source 'Functions-PSStoredCredentials.ps1' and load the .cred file into a PowerShell credential object
    For more info, see: 
    https://practical365.com/blog/saving-credentials-for-office-365-powershell-scripts-and-scheduled-tasks/
#>

# Test to see if admin credentials exist
if (Test-Path "${KeyPath}\${env:AdminUPN}.cred") {

    # Dot source the function to enable the Get-StoredCredential function from $KeyPath
    . '.\Profile\Functions-PSStoredCredentials.ps1'

    # Get-StoredCredential uses the .cred file in $KeyPath generated by New-StoredCredential
    $AdminCredential = (Get-StoredCredential -UserName $Env:AdminUPN)
}

#### End fancy stored credentials ####

# Proxy settings to allow access to web/remote stuff like Office 365 and the PowerShell Gallery
#$WebClient = New-Object System.Net.WebClient
#$WebClient.Proxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials

# Assume Windows 10 and add the Chocolately profile
$ChocolateyProfile = "$Env:ChocolateyInstall\helpers\chocolateyProfile.psm1"

if (Test-Path($ChocolateyProfile)) {
    Import-Module "$ChocolateyProfile"
}

# Show a custom message
Write-Host -ForegroundColor 'White' `
"Running as $Env:Username with profile path: $KeyPath `nDomain admin credentials loaded:" $([bool]$AdminCredential)"`n"
